#BlueJ class context
comment0.target=DoubleLinkedList
comment0.text=\n\ Write\ a\ description\ of\ class\ DoubleLinkedList\ here.\n\n\ @author\ Alexandre\ Guidoux\n\ @version\ 1.0\n
comment1.params=index
comment1.target=void\ checkIndex(int)
comment1.text=\n\ Check\ if\ the\ 0\ <\=\ index\ <\=\ size\ \n\ (avoid\ error\ during\ manipulation\ of\ the\ list)\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment11.params=o
comment11.target=boolean\ contains(java.lang.Object)
comment12.params=a
comment12.target=java.lang.Object[]\ toArray(java.lang.Object[])
comment13.params=e
comment13.target=boolean\ add(java.lang.Object)
comment14.params=o
comment14.target=boolean\ remove(java.lang.Object)
comment15.params=c
comment15.target=boolean\ addAll(java.util.Collection)
comment16.params=
comment16.target=void\ clear()
comment17.params=index
comment17.target=java.lang.Object\ get(int)
comment18.params=index\ value
comment18.target=void\ add(int,\ java.lang.Object)
comment19.params=index\ value
comment19.target=java.lang.Object\ set(int,\ java.lang.Object)
comment2.params=node
comment2.target=void\ addHead(DoubleLinkedList.Node)
comment2.text=\n\ Add\ a\ new\ node\ as\ head\ of\ the\ list\n\ \n\ @param\ node\ will\ become\ the\ head\ of\ the\ list\n
comment20.params=index
comment20.target=java.lang.Object\ remove(int)
comment21.params=o
comment21.target=int\ indexOf(java.lang.Object)
comment22.params=
comment22.target=java.util.Iterator\ iterator()
comment23.params=index
comment23.target=java.util.ListIterator\ listIterator(int)
comment24.params=
comment24.target=java.util.ListIterator\ listIterator()
comment25.params=index\ c
comment25.target=boolean\ addAll(int,\ java.util.Collection)
comment26.params=c
comment26.target=boolean\ containsAll(java.util.Collection)
comment27.params=o
comment27.target=boolean\ equals(java.lang.Object)
comment28.params=
comment28.target=int\ hashCode()
comment29.params=o
comment29.target=int\ lastIndexOf(java.lang.Object)
comment3.params=node
comment3.target=void\ addFirstHead(DoubleLinkedList.Node)
comment3.text=\n\ Add\ the\ first\ node\ in\ the\ list\n
comment30.params=c
comment30.target=boolean\ removeAll(java.util.Collection)
comment31.params=c
comment31.target=boolean\ retainAll(java.util.Collection)
comment32.params=fromIndex\ toIndex
comment32.target=java.util.List\ subList(int,\ int)
comment33.params=
comment33.target=java.lang.Object[]\ toArray()
comment4.params=node
comment4.target=void\ addTail(DoubleLinkedList.Node)
comment4.text=\n\ Add\ a\ node\ at\ the\ end\ of\ the\ list\n
comment5.params=node\ inserted
comment5.target=void\ insertNode(DoubleLinkedList.Node,\ DoubleLinkedList.Node)
comment5.text=\n\ Add\ a\ node\ before\ the\ node\ "marker"\n\ \n\ @node\ node\ as\ marker\ in\ the\ list\n\ @inserted\ node\ which\ wil\ be\ inserted\n
comment6.params=node
comment6.target=void\ removeNode(DoubleLinkedList.Node)
comment6.text=\n\ Remove\ a\ node\ in\ the\ list\n
comment7.params=index
comment7.target=DoubleLinkedList.Node\ getNode(int)
comment7.text=\n\ Parse\ the\ list\ to\ get\ the\ node\ at\ the\ index\ position\n\ \n\ @param\ index\ must\ be\ 0\ <\=\ index\ <\ size()\ else\ throw\ ArrayIndexOutOfBoundsException\n
comment8.params=
comment8.target=DoubleLinkedList()
comment9.params=
comment9.target=int\ size()
numComments=34
