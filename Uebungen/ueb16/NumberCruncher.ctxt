#BlueJ class context
comment0.target=NumberCruncher
comment0.text=\n\ The\ implementation\ of\ the\ 2.\ Aufgabe\ \ with\ anonymous\ classes\n\n\ @author\ Alexandre\ Guidoux\n\ @version\ 1.0\n
comment1.params=size\ seed
comment1.target=NumberCruncher(int,\ int)
comment1.text=\n\ TESTING\ constructor\n\ Add\ the\ seed\ parameter\ to\ fix\ randomness\n
comment10.params=
comment10.target=void\ doIt()
comment11.params=
comment11.target=NumberCruncher.Operation\ divide()
comment11.text=\n\ Implement\ the\ divide\ Operation\ \:\n\ Teilt\ die\ n/2\ gr\u00F6\u00DFten\ Werte\ im\ Array\ durch\ die\ n/2\ Kleinsten\ \n\ und\ speichert\ den\ neuenWert\ im\ Datenfeld\ des\ jeweils\ gr\u00F6\u00DFeren\ Wertes.\ \n\ D.h.\ der\ gr\u00F6\u00DFte\ Wert\ wird\ durch\ den\ Kleinsten\ geteilt.\ \n\ Der\ Zweitgr\u00F6\u00DFte\ durch\ den\ Zweitkleinsten\ usw.\n
comment12.params=
comment12.target=void\ doIt()
comment13.params=
comment13.target=NumberCruncher.Operation\ average()
comment13.text=\n\ Implement\ the\ average\ Operation\:\n\ Bestimmt\ den\ Durchschnitt\ aller\ Werte\ im\ Array\ und\ \n\ speichert\ den\ Durchschnittswert\ im\ Datenfeld\ mit\ dem\ gr\u00F6\u00DFten\ Wert.\n
comment14.params=
comment14.target=void\ doIt()
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment2.params=size
comment2.target=NumberCruncher(int)
comment2.text=\n\ Create\ an\ array\ and\ fill\ it\ with\ random\ float\ number.\n\ @param\ size\ fo\ the\ array\n
comment3.params=
comment3.target=float[]\ getArray()
comment3.text=\n\ @return\ the\ float\ array\n
comment4.params=operations
comment4.target=void\ crunch(java.lang.String[])
comment4.text=\n\ Select\ the\ operation\ that\ has\ to\ be\ done.\ Then\ run\ it\ *in\ place*\n
comment5.params=
comment5.target=NumberCruncher.Operation\ sum()
comment5.text=\n\ Implement\ the\ sum\ Operation\ \:\ \n\ Summiert\ die\ Elemente\ des\ Arrays\ paarweise\ von\ links\ nach\ rechts\ auf\ \n\ und\ speichertden\ neuen\ Wert\ in\ dem\ jeweils\ rechten\ Datenfeld.\n
comment6.params=
comment6.target=void\ doIt()
comment7.params=
comment7.target=NumberCruncher.Operation\ substract()
comment7.text=\n\ Implement\ the\ substract\ Operation\ \:\n\ Analog\ zu\ sum\ nur\ mit\ Substraktion\n
comment8.params=
comment8.target=void\ doIt()
comment9.params=
comment9.target=NumberCruncher.Operation\ swirl()
comment9.text=\n\ Implement\ the\ swirl\ Operation\ \:\n\ F\u00FChrt\ n\ zuf\u00E4llige\ Vertauschungen\ der\ Datenfelder\ durch;\n\ n\ ist\ durch\ die\ L\u00E4nge\ des\ float-Arrays\ gegeben.\n
numComments=16
