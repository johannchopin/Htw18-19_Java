#BlueJ class context
comment0.target=LagerDialog
comment0.text=\n\ Ermoeglicht\ die\ Lager-Klasse\ zu\ benutzen\n\n\ @author\ Alexandre\ Guidoux\ &&\ Johann\ Chopin\n\ @version\ 1.0\n
comment1.params=
comment1.target=void\ start()
comment1.text=\n\ Hauptschleife\ des\ Testprogramms\n
comment10.params=
comment10.target=void\ ruf_loeschtArtikel()
comment10.text=\n\ ruft\ die\ "loeschen"\ Methode\ des\ Lagers\n
comment11.params=
comment11.target=void\ ruf_artikelZugang()
comment11.text=\n\ ruft\ die\ "Zugang"\ methode\ des\ Lagers\n
comment12.params=
comment12.target=void\ ruf_artikelAbgang()
comment12.text=\n\ ruft\ die\ "Abgang"\ Methode\ des\ Lagers\n
comment13.params=
comment13.target=void\ ruf_artikelPreisAendern()
comment13.text=\n\ ruft\ die\ "ChangePreis"\ Methode\ des\ Lagers\n
comment14.params=
comment14.target=void\ ruf_lagerDarstellung()
comment14.text=\n\ Stellt\ die\ String-Darstellung\ des\ Lagers\ dar.\n
comment15.params=args
comment15.target=void\ main(java.lang.String[])
comment15.text=\n\ Main-Methode\ \:\ Erzeuget\ des\ LagerDialog-Objekts\ und\ start\ der\n\ Hauptschleife.\n
comment16.params=currentLager
comment16.target=LagerDialog(ArtikelLager)
comment17.params=
comment17.target=LagerDialog()
comment2.params=
comment2.target=java.lang.String\ printlnMenu()
comment2.text=\n\ @return\ String\ Darstellung\ des\ Menues\n
comment3.params=
comment3.target=java.lang.String\ printlnArtikelWahl()
comment3.text=\n\ Schafft\ eine\ String,\ die\ das\ Menu\ dargestellt\n
comment4.params=nummer
comment4.target=LagerDialog.Funktion\ intToFunktion(int)
comment4.text=\n\ der\ Wert\ von\ FUNKTION\ ist\ mit\ der\ Ordinalzahl\ nummer\ verbunden\n\ @return\ eine\ Wert\ von\ FUNKTION\n
comment5.params=nummer
comment5.target=LagerDialog.ArtikelType\ intToArtikelType(int)
comment5.text=\n\ der\ Wert\ von\ ArtikelType\ ist\ mit\ der\ Ordinalzahl\ nummer\ verbunden\n\ @return\ eine\ Wert\ von\ ArtikelType\n
comment6.params=
comment6.target=LagerDialog.Funktion\ einlesenFunktion()
comment6.text=\n\ Men\u00FC\ ausgeben\ und\ FUNKTION\ einlesen.\n\ \n\ @return\ eingelesene\ FUNKTION\ als\ ganzzahliger\ Wert\n
comment7.params=wahl
comment7.target=void\ ausfuehrenFUNKTION(LagerDialog.Funktion)
comment7.text=\n\ Ausf\u00FChren\ der\ ausgeFUNKTIONten\ FUNKTION\n\ \n\ @param\ FUNKTION\ fur\ die\ auszuf\u00FChrende\ FUNKTION\n
comment8.params=
comment8.target=void\ ruf_lager()
comment8.text=\n\ ruft\ den\ Kontruktor\ des\ Lagers\n
comment9.params=
comment9.target=void\ ruf_anlegen()
comment9.text=\n\ ruf\ die\ "anlegen"\ Methode\ des\ Lagers\n
numComments=18
